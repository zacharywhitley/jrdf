<?xml version="1.0" encoding="UTF-8"?>
<project name="jrdf" default="dist" basedir=".">

    <import file="build-setup.xml"/>
    <import file="build-sparql.xml"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="gen-src" depends="gen-sparql-parser"/>

    <macrodef name="compile.macro">
        <attribute name="src.dir"/>
        <attribute name="output.dir"/>
        <attribute name="classpath.ref"/>
        <attribute name="code.path"/>
        <attribute name="code.pattern"/>
        <attribute name="compiler.args" default="-Xlint"/>
        <sequential>
            <mkdir dir="@{output.dir}"/>
            <javac source="${java.src.version}" srcdir="@{src.dir}" destdir="@{output.dir}"
                   classpathref="@{classpath.ref}"
                   debug="${compile.debug}" debuglevel="${compile.debuglevel}" deprecation="${compile.deprecation}"
                   optimize="${compile.optimize}">
                <src>
                    <path refid="@{code.path}"/>
                </src>
                <patternset refid="@{code.pattern}"/>
                <compilerarg value="@{compiler.args}"/>
            </javac>
        </sequential>
    </macrodef>

    <target name="compile" depends="gen-src">
        <compile.macro src.dir="${gen.src.dir}" classpath.ref="gen.class.path" output.dir="${prod.classes.dir}"
                code.path="gen.code.path" code.pattern="production.code.pattern"
                compiler.args="-Xlint:-unchecked,-serial"/>
        <compile.macro src.dir="${prod.src.dir}" classpath.ref="production.class.path" output.dir="${prod.classes.dir}"
                code.path="production.code.path" code.pattern="production.code.pattern"/>
        <compile.macro src.dir="${test.src.dir}" classpath.ref="test.class.path" output.dir="${test.classes.dir}"
                code.path="test.code.path" code.pattern="test.code.pattern"/>
    </target>

    <target name="dist" depends="compile,-copy-sablecc-resources">
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/${project.jar}">
            <fileset dir="${prod.classes.dir}"/>
        </jar>
    </target>

    <target name="javadoc" depends="gen-src">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}" author="true" version="true"
                 additionalparam="-breakiterator" Use="true"
                 classpathref="production.class.path" source="${java.src.version}"
                 windowtitle="${project.longname} Framework ${project.version.full}"
                 doctitle="${project.longname} Framework ${project.version.full}"
                 packagenames="org.jrdf.*"
                 link="http://java.sun.com/j2se/1.5.0/docs/api">
            <fileset refid="production.code.fileset"/>
            <fileset refid="gen.code.fileset"/>
        </javadoc>
    </target>

    <macrodef name="test.macro">
        <attribute name="failure.property"/>
        <sequential>
            <mkdir dir="${test.results.dir}"/>
            <junit failureproperty="@{failure.property}" fork="true" forkmode="perBatch">
                <classpath refid="test.class.path"/>
                <formatter type="brief" usefile="false"/>
                <batchtest todir="${test.results.dir}">
                    <fileset refid="test.code.fileset"/>
                </batchtest>
                <!--<sysproperty key="log4j.configuration" value="file:${conf.dir}/log4j.test.properties"/>-->
            </junit>
        </sequential>
    </macrodef>

    <!-- FIXME: Add integration test target! -->
    <target name="test" depends="dist">
        <test.macro failure.property="unit.test.failed"/>
        <fail if="unit.test.failed" message="Tests failed."/>
    </target>
</project>
